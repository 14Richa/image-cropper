{"ast":null,"code":"var _jsxFileName = \"/home/alvis/Desktop/image-cropper/client/src/App.js\";\nimport React from 'react'; //import Resizer from 'react-image-file-resizer';\n//import ImageUploader from 'react-images-upload';\n\nimport Dropzone from 'react-dropzone';\nconst imageMaxSize = 1000000; //bytes\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnDrop = (files, rejectedFiles) => {\n      console.log(files);\n      console.log('rejected files are', rejectedFiles);\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, \" Drop Your file \"), React.createElement(Dropzone, {\n      onDrop: this.handleOnDrop.bind(this),\n      accept: \"image/*\",\n      multiple: false,\n      maxSize: imageMaxSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, ({\n      getRootProps,\n      getInputProps\n    }) => React.createElement(\"div\", Object.assign({}, getRootProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }), React.createElement(\"input\", Object.assign({}, getInputProps(), {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }))), \" \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alvis/Desktop/image-cropper/client/src/App.js"],"names":["React","Dropzone","imageMaxSize","App","Component","handleOnDrop","files","rejectedFiles","console","log","render","bind","getRootProps","getInputProps"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,YAAY,GAAG,OAArB,C,CAA6B;;AAE7B,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BC,YAF8B,GAEf,CAACC,KAAD,EAAQC,aAAR,KAA0B;AACrCC,MAAAA,OAAO,CAACC,GAAR,CAAYH,KAAZ;AACAE,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCF,aAAlC;AAEH,KAN6B;AAAA;;AAW9BG,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,EAEA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKL,YAAL,CAAkBM,IAAlB,CAAuB,IAAvB,CAAlB;AAAgD,MAAA,MAAM,EAAG,SAAzD;AAAmE,MAAA,QAAQ,EAAI,KAA/E;AAAuF,MAAA,OAAO,EAAIT,YAAlG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAiH,CAAC;AAAEU,MAAAA,YAAF;AAAgBC,MAAAA;AAAhB,KAAD,KACrH,6CACMD,YAAY,EADlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAIE,+CAAWC,aAAa,EAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAJF,CADI,MAFA,CADF;AAeH;;AA3B6B;;AA8BlC,eAAeV,GAAf","sourcesContent":["import React from 'react';\n//import Resizer from 'react-image-file-resizer';\n//import ImageUploader from 'react-images-upload';\nimport Dropzone from 'react-dropzone';\n\nconst imageMaxSize = 1000000 //bytes\n\nclass App extends React.Component {\n\n    handleOnDrop = (files, rejectedFiles) => {\n        console.log(files)\n        console.log('rejected files are', rejectedFiles)\n\n    }\n \n                                          \n\n  \n    render() {\n        return (\n          <div>\n          <h1> Drop Your file </h1>\n          <Dropzone onDrop={this.handleOnDrop.bind(this)} accept = 'image/*' multiple = {false}  maxSize = {imageMaxSize}>{({ getRootProps, getInputProps }) => (\n      <div\n        {...getRootProps()}\n        \n      >\n        <input {...getInputProps()} />\n      </div>\n    )} </Dropzone>\n            \n           </div>\n\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}