{"ast":null,"code":"var _jsxFileName = \"/home/alvis/Desktop/image-cropper/client/src/App.js\";\nimport React from 'react'; //import Resizer from 'react-image-file-resizer';\n//import ImageUploader from 'react-images-upload';\n\nimport Dropzone from 'react-dropzone';\nconst imageMaxSize = 10; //bytes\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n\n    this.handleOnDrop = (files, rejectedFiles) => {};\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19\n      },\n      __self: this\n    }, React.createElement(Dropzone, {\n      onDrop: this.handleOnDrop,\n      accept: \"image/*\",\n      multiple: false,\n      maxSize: imageMaxSize,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 20\n      },\n      __self: this\n    }, \" Drop file here \"));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alvis/Desktop/image-cropper/client/src/App.js"],"names":["React","Dropzone","imageMaxSize","App","Component","handleOnDrop","files","rejectedFiles","render"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB,C,CACA;AACA;;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,MAAMC,YAAY,GAAG,EAArB,C,CAAwB;;AAExB,MAAMC,GAAN,SAAkBH,KAAK,CAACI,SAAxB,CAAkC;AAAA;AAAA;;AAAA,SAE9BC,YAF8B,GAEf,CAACC,KAAD,EAAQC,aAAR,KAA0B,CAExC,CAJ6B;AAAA;;AAS9BC,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,QAAD;AAAU,MAAA,MAAM,EAAE,KAAKH,YAAvB;AAAqC,MAAA,MAAM,EAAG,SAA9C;AAAwD,MAAA,QAAQ,EAAI,KAApE;AAA4E,MAAA,OAAO,EAAIH,YAAvF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADA,CADF;AAOH;;AAjB6B;;AAoBlC,eAAeC,GAAf","sourcesContent":["import React from 'react';\n//import Resizer from 'react-image-file-resizer';\n//import ImageUploader from 'react-images-upload';\nimport Dropzone from 'react-dropzone';\n\nconst imageMaxSize = 10 //bytes\n\nclass App extends React.Component {\n\n    handleOnDrop = (files, rejectedFiles) => {\n\n    }\n \n                                          \n\n  \n    render() {\n        return (\n          <div>\n          <Dropzone onDrop={this.handleOnDrop} accept = 'image/*' multiple = {false}  maxSize = {imageMaxSize}> Drop file here </Dropzone>\n            \n           </div>\n\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}