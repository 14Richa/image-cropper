{"ast":null,"code":"// A few JavaScript Functions for Images and Files\n// Author: Justin Mitchel\n// Source: https://kirr.co/ndywes\n// Convert a Base64-encoded string to a File object\nexport function base64StringtoFile(base64String, filename) {\n  var arr = base64String.split(','),\n      mime = arr[0].match(/:(.*?);/)[1],\n      bstr = atob(arr[1]),\n      n = bstr.length,\n      u8arr = new Uint8Array(n);\n\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n);\n  }\n\n  return new File([u8arr], filename, {\n    type: mime\n  });\n} // Download a Base64-encoded file\n\nexport function downloadBase64File(base64Data, filename) {\n  var element = document.createElement('a');\n  element.setAttribute('href', base64Data);\n  element.setAttribute('download', filename);\n  element.style.display = 'none';\n  document.body.appendChild(element);\n  element.click();\n  document.body.removeChild(element);\n} // Extract an Base64 Image's File Extension\n\nexport function extractImageFileExtensionFromBase64(base64Data) {\n  return base64Data.substring('data:image/'.length, base64Data.indexOf(\";base64\"));\n}\n\nfunction getCroppedImg(image, crop, filename) {\n  const canvas = document.createElement('canvas');\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext('2d');\n  ctx.drawImage(image, crop.x * scaleX, crop.y * scaleY, crop.width * scaleX, crop.height * scaleY, 0, 0, crop.width, crop.height);\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (!blob) {\n        //reject(new Error('Canvas is empty'));\n        console.error('Canvas is empty');\n        return;\n      }\n\n      blob.name = fileName;\n      window.URL.revokeObjectURL(this.fileUrl);\n      this.fileUrl = window.URL.createObjectURL(blob);\n      resolve(this.fileUrl);\n    }, 'image/jpeg');\n  });\n}\n\nexport async function makeClientCrop(imageRef, crop) {\n  if (imageRef && crop.width && crop.height) {\n    const croppedImageURL = await getCroppedImg(imageRef, crop, 'newFile.jpeg');\n    return croppedImageURL;\n  }\n} // Base64 Image to Canvas with a Crop\n\nexport function image64toCanvasRef(canvasRef, image64, pixelCrop) {\n  const canvas = canvasRef; // document.createElement('canvas');\n\n  canvas.width = pixelCrop.width;\n  canvas.height = pixelCrop.height;\n  const ctx = canvas.getContext('2d');\n  const image = new Image();\n  image.src = image64;\n  console.log(pixelCrop);\n  console.log(image);\n\n  image.onload = function () {\n    console.log(\"check\");\n    ctx.drawImage(image, pixelCrop.x, pixelCrop.y, pixelCrop.width, pixelCrop.height, 0, 0, pixelCrop.width, pixelCrop.height);\n  };\n}","map":{"version":3,"sources":["/home/alvis/Desktop/image-cropper/client/src/ResuableUtils.js"],"names":["base64StringtoFile","base64String","filename","arr","split","mime","match","bstr","atob","n","length","u8arr","Uint8Array","charCodeAt","File","type","downloadBase64File","base64Data","element","document","createElement","setAttribute","style","display","body","appendChild","click","removeChild","extractImageFileExtensionFromBase64","substring","indexOf","getCroppedImg","image","crop","canvas","scaleX","naturalWidth","width","scaleY","naturalHeight","height","ctx","getContext","drawImage","x","y","Promise","resolve","reject","toBlob","blob","console","error","name","fileName","window","URL","revokeObjectURL","fileUrl","createObjectURL","makeClientCrop","imageRef","croppedImageURL","image64toCanvasRef","canvasRef","image64","pixelCrop","Image","src","log","onload"],"mappings":"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","sourcesContent":["// A few JavaScript Functions for Images and Files\n// Author: Justin Mitchel\n// Source: https://kirr.co/ndywes\n\n// Convert a Base64-encoded string to a File object\nexport function base64StringtoFile (base64String, filename) {\n  var arr = base64String.split(','), mime = arr[0].match(/:(.*?);/)[1],\n    bstr = atob(arr[1]), n = bstr.length, u8arr = new Uint8Array(n)\n  while (n--) {\n    u8arr[n] = bstr.charCodeAt(n)\n  }\n  return new File([u8arr], filename, {type: mime})\n}\n\n// Download a Base64-encoded file\n\nexport function downloadBase64File (base64Data, filename) {\n  var element = document.createElement('a')\n  element.setAttribute('href', base64Data)\n  element.setAttribute('download', filename)\n  element.style.display = 'none'\n  document.body.appendChild(element)\n  element.click()\n  document.body.removeChild(element)\n}\n\n// Extract an Base64 Image's File Extension\nexport function extractImageFileExtensionFromBase64 (base64Data) {\n  return base64Data.substring('data:image/'.length, base64Data.indexOf(\";base64\"))\n}\n\n\nfunction getCroppedImg(image, crop, filename){\n  const canvas = document.createElement('canvas');\n  const scaleX = image.naturalWidth / image.width;\n  const scaleY = image.naturalHeight / image.height;\n  canvas.width = crop.width;\n  canvas.height = crop.height;\n  const ctx = canvas.getContext('2d');\n\n  ctx.drawImage(\n    image,\n    crop.x * scaleX,\n    crop.y * scaleY,\n    crop.width * scaleX,\n    crop.height * scaleY,\n    0,\n    0,\n    crop.width,\n    crop.height\n  );\n\n  return new Promise((resolve, reject) => {\n    canvas.toBlob(blob => {\n      if (!blob) {\n        //reject(new Error('Canvas is empty'));\n        console.error('Canvas is empty');\n        return;\n      }\n      blob.name = fileName;\n      window.URL.revokeObjectURL(this.fileUrl);\n      this.fileUrl = window.URL.createObjectURL(blob);\n      resolve(this.fileUrl);\n    }, 'image/jpeg');\n  });\n}\n\nexport async function makeClientCrop(imageRef, crop){\n  if(imageRef && crop.width && crop.height){\n    const croppedImageURL = await getCroppedImg(imageRef, crop, 'newFile.jpeg')\n    return croppedImageURL;\n  }\n}\n\n// Base64 Image to Canvas with a Crop\nexport function image64toCanvasRef (canvasRef, image64, pixelCrop) {\n  const canvas = canvasRef // document.createElement('canvas');\n  canvas.width = pixelCrop.width\n  canvas.height = pixelCrop.height\n  const ctx = canvas.getContext('2d')\n  const image = new Image()\n  image.src = image64\n  console.log(pixelCrop);\n  console.log(image);\n  image.onload = function () {\n    console.log(\"check\");\n    ctx.drawImage(\n      image,\n      pixelCrop.x,\n      pixelCrop.y,\n      pixelCrop.width,\n      pixelCrop.height,\n      0,\n      0,\n      pixelCrop.width,\n      pixelCrop.height\n    )\n  }\n}"]},"metadata":{},"sourceType":"module"}