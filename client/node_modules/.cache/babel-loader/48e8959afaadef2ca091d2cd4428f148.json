{"ast":null,"code":"var _jsxFileName = \"/home/alvis/Desktop/image-cropper/client/src/App.js\";\nimport React, { Component } from 'react'; //import Resizer from 'react-image-file-resizer';\n\nimport ImageUploader from 'react-images-upload';\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pictures: [],\n      apiResponse: \"check\"\n    };\n  }\n\n  callAPI() {\n    fetch(\"http://localhost:9000/testAPI\").then(res => res.text()).then(res => this.setState({\n      apiResponse: res\n    }));\n  }\n\n  componentWillMount() {\n    this.callAPI();\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, React.createElement(ImageUploader, {\n      withIcon: true,\n      buttonText: \"Choose images\",\n      onChange: this.onDrop,\n      imgExtension: ['.jpg', '.gif', '.png', '.gif'],\n      maxFileSize: 5242880,\n      minFileSize: 1204,\n      withPreview: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, this.state.apiResponse));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/alvis/Desktop/image-cropper/client/src/App.js"],"names":["React","Component","ImageUploader","App","constructor","props","state","pictures","apiResponse","callAPI","fetch","then","res","text","setState","componentWillMount","render","onDrop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC,C,CACA;;AACA,OAAOC,aAAP,MAA0B,qBAA1B;;AAEA,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AAE9BG,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACC,SAAKC,KAAL,GAAa;AAAEC,MAAAA,QAAQ,EAAE,EAAZ;AACbC,MAAAA,WAAW,EAAE;AADA,KAAb;AAEJ;;AAEDC,EAAAA,OAAO,GAAG;AACVC,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACKC,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUC,GAAG,IAAI,KAAKE,QAAL,CAAc;AAAEN,MAAAA,WAAW,EAAEI;AAAf,KAAd,CAFjB;AAGC;;AAELG,EAAAA,kBAAkB,GAAG;AACjB,SAAKN,OAAL;AACH;;AAGGO,EAAAA,MAAM,GAAG;AACL,WACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,aAAD;AACI,MAAA,QAAQ,EAAE,IADd;AAEI,MAAA,UAAU,EAAC,eAFf;AAGI,MAAA,QAAQ,EAAE,KAAKC,MAHnB;AAII,MAAA,YAAY,EAAE,CAAC,MAAD,EAAS,MAAT,EAAiB,MAAjB,EAAyB,MAAzB,CAJlB;AAKI,MAAA,WAAW,EAAE,OALjB;AAMI,MAAA,WAAW,EAAE,IANjB;AAOI,MAAA,WAAW,EAAI,IAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAUE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAI,KAAKX,KAAL,CAAWE,WAAf,CAVF,CADF;AAeH;;AAnC6B;;AAsClC,eAAeL,GAAf","sourcesContent":["import React, { Component } from 'react';\n//import Resizer from 'react-image-file-resizer';\nimport ImageUploader from 'react-images-upload';\n\nclass App extends React.Component {\n \n    constructor(props) {\n        super(props);\n         this.state = { pictures: [],\n         apiResponse: \"check\" };\n    }\n\n    callAPI() {\n    fetch(\"http://localhost:9000/testAPI\")\n        .then(res => res.text())\n        .then(res => this.setState({ apiResponse: res }));\n    }\n\ncomponentWillMount() {\n    this.callAPI();\n}\n\n  \n    render() {\n        return (\n          <div>\n            <ImageUploader\n                withIcon={true}\n                buttonText='Choose images'\n                onChange={this.onDrop}\n                imgExtension={['.jpg', '.gif', '.png', '.gif']}\n                maxFileSize={5242880}\n                minFileSize={1204}\n                withPreview = {true}\n            />\n            <p>{this.state.apiResponse}</p>\n           </div>\n\n        );\n    }\n}\n\nexport default App;\n\n"]},"metadata":{},"sourceType":"module"}